{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/sowmya/codefellows/401/reactNative-App-d39/reactNative-app/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CameraRoll from \"@react-native-community/cameraroll\";\nimport * as Permissions from 'expo-permissions';\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      permissions = _useState2[0],\n      setPermissions = _useState2[1];\n\n  var getPermissions = function getPermissions() {\n    var _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function getPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CONTACTS));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n            console.log({\n              status: status\n            });\n\n            if (status === 'granted') {\n              setPermissions(true);\n            } else {\n              setPermissions(false);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var savePicture = function savePicture() {\n    return _regeneratorRuntime.async(function savePicture$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = Platform.OS === \"android\";\n\n            if (!_context2.t0) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(getPermissions());\n\n          case 4:\n            _context2.t0 = !_context2.sent;\n\n          case 5:\n            if (!_context2.t0) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            CameraRoll.save(tag, {\n              type: type,\n              album: album\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getPermissions();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Hello, World!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/sowmya/codefellows/401/reactNative-App-d39/reactNative-app/App.js"],"names":["StatusBar","React","CameraRoll","Permissions","App","useState","permissions","setPermissions","getPermissions","askAsync","CONTACTS","status","console","log","savePicture","Platform","OS","save","tag","type","album","useEffect","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAEUC,QAAQ,CAAC,KAAD,CAFlB;AAAA;AAAA,MAErBC,WAFqB;AAAA,MAERC,cAFQ;;AAI5B,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEL,WAAW,CAACM,QAAZ,CAAqBN,WAAW,CAACO,QAAjC,CADF;;AAAA;AAAA;AACdC,YAAAA,MADc,yBACdA,MADc;AAErBC,YAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,cAAAA,MAAM,EAANA;AAAD,aAAZ;;AACA,gBAAGA,MAAM,KAAK,SAAd,EAAwB;AACtBJ,cAAAA,cAAc,CAAC,IAAD,CAAd;AACD,aAFD,MAEO;AAAEA,cAAAA,cAAc,CAAC,KAAD,CAAd;AAAuB;;AALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAQA,MAAMO,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA,2BACdC,QAAQ,CAACC,EAAT,KAAgB,SADF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,6CACuBR,cAAc,EADrC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKlBN,YAAAA,UAAU,CAACe,IAAX,CAAgBC,GAAhB,EAAqB;AAAEC,cAAAA,IAAI,EAAJA,IAAF;AAAQC,cAAAA,KAAK,EAALA;AAAR,aAArB;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAQAC,EAAAA,SAAS,CAAE,YAAM;AACfb,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEc,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport CameraRoll from \"@react-native-community/cameraroll\";\nimport * as Permissions from 'expo-permissions';\n\nexport default function App() {\n\n  const [permissions, setPermissions] = useState(false);\n\n  const getPermissions = async () => {\n    const {status} = await Permissions.askAsync(Permissions.CONTACTS);\n    console.log({status});\n    if(status === 'granted'){\n      setPermissions(true);\n    } else { setPermissions(false) }\n  }\n\n  const savePicture = async () => {\n    if (Platform.OS === \"android\" && !(await getPermissions())) {\n      return;\n    }\n  \n    CameraRoll.save(tag, { type, album })\n  };\n  \n  useEffect( () => {\n    getPermissions();\n  }, [])\n\n  // abc() {\n  //   getPackages().add(new CameraRoll())\n  // }\n\n  return (\n    <View style={styles.container}>\n      <Text>Hello, World!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}